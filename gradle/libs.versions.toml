[versions]

project = "0.1-SNAPSHOT"

kotlin = "1.8.10"

dokka = "1.7.20"
kover = "0.7.3"

kotlinx-coroutines = "1.7.3"
kotlinx-atomicfu = "0.22.0"
kotlinx-cli = "0.3.6"

ktor = "2.3.3"
kermit = "1.1.3"
findopenport = "2.0.3"

jeromq = "0.5.2"
zeromqjs = "6.0.0-beta.17"

kotest = "5.6.2"
mockmp = "1.15.0"

build-config = "3.1.0"

[plugins]

kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }

build-config = { id = "com.github.gmazzo.buildconfig", version.ref = "build-config" }

[libraries]

# Used in buildSrc convention plugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-atomicfu-plugin = { module = "org.jetbrains.kotlin:atomicfu", version.ref = "kotlin" }
kotlinx-kover-plugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
kotest-plugin = { module = "io.kotest:kotest-framework-multiplatform-plugin-gradle", version.ref = "kotest" }
mockmp-plugin = { module = "org.kodein.mock:mockmp-gradle-plugin", version.ref = "mockmp" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-cli = { module = "org.jetbrains.kotlinx:kotlinx-cli", version.ref = "kotlinx-cli" }

ktor-io = { module = "io.ktor:ktor-io", version.ref = "ktor" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

jeromq = { module = "org.zeromq:jeromq", version.ref = "jeromq" }

kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

[bundles]
